{"ast":null,"code":"import _objectSpread from \"D:\\\\Users\\\\lucas\\\\Documents\\\\goreact\\\\github-compare\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"D:\\\\Users\\\\lucas\\\\Documents\\\\goreact\\\\github-compare\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _toConsumableArray from \"D:\\\\Users\\\\lucas\\\\Documents\\\\goreact\\\\github-compare\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"D:\\\\Users\\\\lucas\\\\Documents\\\\goreact\\\\github-compare\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\Users\\\\lucas\\\\Documents\\\\goreact\\\\github-compare\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Users\\\\lucas\\\\Documents\\\\goreact\\\\github-compare\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Users\\\\lucas\\\\Documents\\\\goreact\\\\github-compare\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Users\\\\lucas\\\\Documents\\\\goreact\\\\github-compare\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Users\\\\lucas\\\\Documents\\\\goreact\\\\github-compare\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Users\\\\lucas\\\\Documents\\\\goreact\\\\github-compare\\\\src\\\\pages\\\\Main\\\\index.js\";\nimport React, { Component } from \"react\";\nimport moment from \"moment\";\nimport api from \"../../services/api\";\nimport logo from \"../../assets/logo.png\";\nimport { Container, Form } from \"./styles\";\nimport CompareList from \"../../components/CompareList\";\n\nvar Main =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Main, _Component);\n\n  function Main() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Main)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: false,\n      repositoryError: false,\n      repositoryInput: \"\",\n      repositories: []\n    };\n\n    _this.handleAddRepository =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _ref2, repository;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n\n                _this.setState({\n                  loading: true\n                });\n\n                _context.prev = 2;\n                _context.next = 5;\n                return api.get(\"/repos/\".concat(_this.state.repositoryInput));\n\n              case 5:\n                _ref2 = _context.sent;\n                repository = _ref2.data;\n                repository.lastCommit = moment(repository.pushed_at).fromNow();\n\n                _this.setState({\n                  repositoryError: false,\n                  repositoryInput: \"\",\n                  repositories: [].concat(_toConsumableArray(_this.state.repositories), [repository])\n                }, function () {\n                  localStorage.setItem(\"repositories\", JSON.stringify(_this.state.repositories));\n                });\n\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](2);\n\n                _this.setState({\n                  repositoryError: true\n                });\n\n              case 14:\n                _context.prev = 14;\n\n                _this.setState({\n                  loading: false\n                });\n\n                return _context.finish(14);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 11, 14, 17]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleRefreshRepo =\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(_ref3) {\n        var id, owner, name, _ref5, newRepository, repositories;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                id = _ref3.id, owner = _ref3.owner, name = _ref3.name;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return api.get(\"/repos/\".concat(owner, \"/\").concat(name));\n\n              case 4:\n                _ref5 = _context2.sent;\n                newRepository = _ref5.data;\n                newRepository.lastCommit = moment(newRepository.pushed_at).fromNow();\n                repositories = [];\n\n                _this.state.repositories.map(function (repository) {\n                  if (repository.id === id) {\n                    repository = _objectSpread({}, newRepository);\n                  }\n\n                  repositories.push(repository);\n                });\n\n                console.log(\"handleRefreshRepo\", repositories);\n\n                _this.setState({\n                  repositories: repositories\n                }, function () {\n                  localStorage.setItem(\"repositories\", JSON.stringify(_this.state.repositories));\n                });\n\n                _context2.next = 16;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](1);\n                alert(\"Error updating repository\");\n\n              case 16:\n                _context2.prev = 16;\n                return _context2.finish(16);\n\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 13, 16, 18]]);\n      }));\n\n      return function (_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this.handleDeleteRepo = function (id) {\n      var repositories = _this.state.repositories.filter(function (repository) {\n        return repository.id !== id;\n      });\n\n      _this.setState({\n        repositories: repositories\n      }, function () {\n        localStorage.setItem(\"repositories\", JSON.stringify(_this.state.repositories));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var repositories = JSON.parse(localStorage.getItem(\"repositories\")) || [];\n      this.setState({\n        repositories: repositories\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        alt: \"Github Compare\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(Form, {\n        withError: this.state.repositoryError,\n        onSubmit: this.handleAddRepository,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"usu\\xE1rio/reposit\\xF3rio\",\n        value: this.state.repositoryInput,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            repositoryInput: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, this.state.loading ? React.createElement(\"i\", {\n        className: \"fa fa-spinner fa-pulse\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }) : \"OK\")), React.createElement(CompareList, {\n        repositories: this.state.repositories,\n        onRefreshRepo: this.handleRefreshRepo,\n        onDeleteRepo: this.handleDeleteRepo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nexport default Main;","map":{"version":3,"sources":["D:\\Users\\lucas\\Documents\\goreact\\github-compare\\src\\pages\\Main\\index.js"],"names":["React","Component","moment","api","logo","Container","Form","CompareList","Main","state","loading","repositoryError","repositoryInput","repositories","handleAddRepository","e","preventDefault","setState","get","repository","data","lastCommit","pushed_at","fromNow","localStorage","setItem","JSON","stringify","handleRefreshRepo","id","owner","name","newRepository","map","push","console","log","alert","handleDeleteRepo","filter","parse","getItem","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport api from \"../../services/api\";\n\nimport logo from \"../../assets/logo.png\";\n\nimport { Container, Form } from \"./styles\";\n\nimport CompareList from \"../../components/CompareList\";\n\nclass Main extends Component {\n  state = {\n    loading: false,\n    repositoryError: false,\n    repositoryInput: \"\",\n    repositories: []\n  };\n\n  componentDidMount() {\n    let repositories = JSON.parse(localStorage.getItem(\"repositories\")) || [];\n    this.setState({ repositories });\n  }\n\n  handleAddRepository = async e => {\n    e.preventDefault();\n\n    this.setState({ loading: true });\n\n    try {\n      const { data: repository } = await api.get(\n        `/repos/${this.state.repositoryInput}`\n      );\n\n      repository.lastCommit = moment(repository.pushed_at).fromNow();\n\n      this.setState(\n        {\n          repositoryError: false,\n          repositoryInput: \"\",\n          repositories: [...this.state.repositories, repository]\n        },\n        () => {\n          localStorage.setItem(\n            \"repositories\",\n            JSON.stringify(this.state.repositories)\n          );\n        }\n      );\n    } catch (err) {\n      this.setState({\n        repositoryError: true\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  handleRefreshRepo = async ({ id, owner, name }) => {\n    try {\n      const { data: newRepository } = await api.get(`/repos/${owner}/${name}`);\n\n      newRepository.lastCommit = moment(newRepository.pushed_at).fromNow();\n\n      const repositories = [];\n      this.state.repositories.map(repository => {\n        if (repository.id === id) {\n          repository = { ...newRepository };\n        }\n        repositories.push(repository);\n      });\n\n      console.log(\"handleRefreshRepo\", repositories);\n\n      this.setState(\n        {\n          repositories\n        },\n        () => {\n          localStorage.setItem(\n            \"repositories\",\n            JSON.stringify(this.state.repositories)\n          );\n        }\n      );\n    } catch (err) {\n      alert(\"Error updating repository\");\n    } finally {\n      // this.setState({ loading: false });\n    }\n  };\n\n  handleDeleteRepo = id => {\n    const repositories = this.state.repositories.filter(\n      repository => repository.id !== id\n    );\n    this.setState({ repositories }, () => {\n      localStorage.setItem(\n        \"repositories\",\n        JSON.stringify(this.state.repositories)\n      );\n    });\n  };\n\n  render() {\n    return (\n      <Container>\n        <img src={logo} alt=\"Github Compare\" />\n\n        <Form\n          withError={this.state.repositoryError}\n          onSubmit={this.handleAddRepository}\n        >\n          <input\n            type=\"text\"\n            placeholder=\"usuário/repositório\"\n            value={this.state.repositoryInput}\n            onChange={e => this.setState({ repositoryInput: e.target.value })}\n          />\n          <button type=\"submit\">\n            {this.state.loading ? (\n              <i className=\"fa fa-spinner fa-pulse\" />\n            ) : (\n              \"OK\"\n            )}\n          </button>\n        </Form>\n\n        <CompareList\n          repositories={this.state.repositories}\n          onRefreshRepo={this.handleRefreshRepo}\n          onDeleteRepo={this.handleDeleteRepo}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}